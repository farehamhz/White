local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\127\71","\92\81\105\219\121"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,1));return "";else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v42,16));if v30 then local v129=0;local v130;while true do if (v129==0) then v130=v13(v101,v30);v30=nil;v129=1;end if (v129==1) then return v130;end end else return v101;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v102=0;local v103;while true do if (0==v102) then v103=(v43/(2^(v44-(2 -1))))%(2^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%1) ;end end else local v104=0;local v105;while true do if (v104==0) then v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or (0 -0) ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + (3 -1) ;return (v49 * 256) + v48 ;end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (0==v50) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35() local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,2 -1 ,20) * (2^(651 -(555 + 64)))) + v55 ;local v59=v31(v56,952 -(857 + 74) ,31);local v60=((v31(v56,32)==(569 -(367 + 201))) and  -1) or 1 ;if (v59==0) then if (v58==0) then return v60 * 0 ;else local v113=0;while true do if (v113==0) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^(979 -(214 + 713))))) ;end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if  not v61 then local v120=0;while true do if (0==v120) then v61=v34();if (v61==(0 + 0)) then return "";end break;end end end v62=1;end if (2==v62) then v64={};for v114=1, #v63 do v64[v114]=v10(v9(v11(v63,v114,v114)));end v62=3;end if (v62==3) then return v14(v64);end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=v32();local v80;if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1 + 0 ,1)==0) then local v109=v31(v83,2,3);local v110=v31(v83,4,6);local v111={v33(),v33(),nil,nil};if (v109==0) then v111[880 -(282 + 595) ]=v33();v111[4]=v33();elseif (v109==1) then v111[3]=v34();elseif (v109==2) then v111[3]=v34() -(2^16) ;elseif (v109==3) then local v133=0;while true do if (v133==0) then v111[3]=v34() -(2^16) ;v111[4]=v33();break;end end end if (v31(v110,1638 -(1523 + 114) ,1)==1) then v111[2]=v70[v111[2]];end if (v31(v110,2,2)==1) then v111[3]=v70[v111[3]];end if (v31(v110,3,3)==1) then v111[4]=v70[v111[4]];end v65[v82]=v111;end end for v84=1,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1 + 0 ];local v76=v72[2];local v77=v72[3];return function(...) local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -(1 -0) ;local v95={};local v96={};for v106=0,v94 do if (v106>=v88) then v92[v106-v88 ]=v93[v106 + 1 ];else v96[v106]=v93[v106 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do v98=v86[v90];v99=v98[1];if (v99<=39) then if (v99<=19) then if (v99<=9) then if (v99<=4) then if (v99<=1) then if (v99>0) then v96[v98[2]]=v96[v98[3]];else local v138=0;local v139;local v140;while true do if (v138==0) then v139=v98[1067 -(68 + 997) ];v140=v96[v139];v138=1;end if (v138==1) then for v340=v139 + (1271 -(226 + 1044)) ,v98[3] do v15(v140,v96[v340]);end break;end end end elseif (v99<=2) then local v141=0;local v142;while true do if (v141==0) then v142=v98[8 -6 ];v96[v142]=v96[v142](v21(v96,v142 + 1 ,v91));break;end end elseif (v99==(120 -(32 + 85))) then v96[v98[2]]=v96[v98[3]][v98[4 + 0 ]];else v96[v98[2]]= #v96[v98[3]];end elseif (v99<=6) then if (v99>5) then v96[v98[2]]=v74[v98[3]];else v90=v98[1 + 2 ];end elseif (v99<=(964 -(892 + 65))) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99==8) then local v216=v98[2];local v217,v218=v89(v96[v216](v21(v96,v216 + 1 ,v91)));v91=(v218 + v216) -1 ;local v219=0;for v300=v216,v91 do v219=v219 + 1 ;v96[v300]=v217[v219];end else local v220=v98[4 -2 ];local v221=v96[v220];for v303=v220 + 1 ,v91 do v15(v221,v96[v303]);end end elseif (v99<=14) then if (v99<=11) then if (v99==10) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99<=12) then v96[v98[2]]=v96[v98[3]]%v98[4] ;elseif (v99>13) then v96[v98[2]]();elseif  not v96[v98[2]] then v90=v90 + (1 -0) ;else v90=v98[3];end elseif (v99<=16) then if (v99>15) then v96[v98[3 -1 ]][v98[3]]=v96[v98[4]];else do return v96[v98[2]]();end end elseif (v99<=17) then local v152=0;local v153;while true do if (v152==0) then v153=v98[2];v96[v153](v21(v96,v153 + (351 -(87 + 263)) ,v91));break;end end elseif (v99>18) then v96[v98[2]]={};else v96[v98[2]]=v96[v98[3]];end elseif (v99<=(209 -(67 + 113))) then if (v99<=24) then if (v99<=21) then if (v99==20) then local v154=0;local v155;while true do if (v154==0) then v155=v98[2];v96[v155]=v96[v155](v96[v155 + 1 ]);break;end end else local v156=0;local v157;while true do if (v156==0) then v157=v98[2];v96[v157]=v96[v157](v21(v96,v157 + 1 ,v91));break;end end end elseif (v99<=22) then v96[v98[2]]=v98[3];elseif (v99>23) then v90=v98[3];else local v227=0;local v228;local v229;local v230;local v231;while true do if (v227==2) then for v362=v228,v91 do local v363=0;while true do if (v363==0) then v231=v231 + 1 ;v96[v362]=v229[v231];break;end end end break;end if (v227==1) then v91=(v230 + v228) -1 ;v231=0;v227=2;end if (v227==0) then v228=v98[2];v229,v230=v89(v96[v228](v21(v96,v228 + 1 ,v91)));v227=1;end end end elseif (v99<=(20 + 6)) then if (v99>25) then v96[v98[2]]=v98[7 -4 ] + v96[v98[4]] ;else v96[v98[2]]=v98[3];end elseif (v99<=27) then local v163=0;local v164;while true do if (v163==0) then v164=v98[2];v96[v164](v96[v164 + 1 ]);break;end end elseif (v99>28) then local v232=v98[2];local v233=v96[v232];local v234=v98[3];for v310=1,v234 do v233[v310]=v96[v232 + v310 ];end else local v235=0;local v236;local v237;local v238;local v239;while true do if (v235==0) then v236=v98[2];v237,v238=v89(v96[v236](v96[v236 + 1 ]));v235=1;end if (v235==2) then for v364=v236,v91 do local v365=0;while true do if (0==v365) then v239=v239 + 1 ;v96[v364]=v237[v239];break;end end end break;end if (v235==1) then v91=(v238 + v236) -1 ;v239=0;v235=2;end end end elseif (v99<=34) then if (v99<=31) then if (v99==30) then local v165=v98[2];local v166=v96[v165];for v208=v165 + 1 ,v91 do v15(v166,v96[v208]);end else do return v96[v98[2]]();end end elseif (v99<=32) then v96[v98[2]]=v96[v98[3]] + v98[4] ;elseif (v99==33) then local v240=0;local v241;while true do if (v240==0) then v241=v98[2];v96[v241]=v96[v241](v96[v241 + 1 ]);break;end end else local v242=v98[2 + 0 ];v96[v242](v21(v96,v242 + 1 ,v98[3]));end elseif (v99<=(143 -107)) then if (v99>35) then local v168=0;local v169;while true do if (v168==0) then v169=v98[2];do return v21(v96,v169,v91);end break;end end else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=(989 -(802 + 150))) then local v171=v98[2];v96[v171](v96[v171 + 1 ]);elseif (v99>(102 -64)) then v96[v98[2]][v98[3]]=v96[v98[6 -2 ]];else local v245=0;local v246;local v247;local v248;while true do if (v245==2) then for v366=1,v98[4] do v90=v90 + 1 ;local v367=v86[v90];if (v367[1]==1) then v248[v366-1 ]={v96,v367[3]};else v248[v366-1 ]={v73,v367[3]};end v95[ #v95 + (998 -(915 + 82)) ]=v248;end v96[v98[5 -3 ]]=v40(v246,v247,v74);break;end if (v245==0) then v246=v87[v98[3]];v247=nil;v245=1;end if (v245==1) then v248={};v247=v18({},{[v7("\51\224\244\189\84\36\20","\65\108\191\157\211\48")]=function(v369,v370) local v371=v248[v370];return v371[1 + 0 ][v371[2]];end,[v7("\28\5\209\121\52\51\209\120\38\34","\28\67\90\191")]=function(v372,v373,v374) local v375=0;local v376;while true do if (v375==0) then v376=v248[v373];v376[1][v376[2]]=v374;break;end end end});v245=2;end end end elseif (v99<=59) then if (v99<=(29 + 20)) then if (v99<=44) then if (v99<=41) then if (v99>40) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else local v172=0;local v173;local v174;local v175;while true do if (v172==0) then v173=v98[2 -0 ];v174=v96[v173];v172=1;end if (v172==1) then v175=v96[v173 + 2 ];if (v175>0) then if (v174>v96[v173 + 1 ]) then v90=v98[3];else v96[v173 + 3 ]=v174;end elseif (v174<v96[v173 + 1 ]) then v90=v98[3];else v96[v173 + 3 ]=v174;end break;end end end elseif (v99<=42) then local v176=v98[2];local v177=v96[v98[3]];v96[v176 + 1 ]=v177;v96[v176]=v177[v98[4]];elseif (v99==(1230 -(1069 + 118))) then do return;end else v96[v98[2]][v96[v98[3]]]=v98[4];end elseif (v99<=46) then if (v99>45) then v96[v98[2]]= #v96[v98[3]];elseif  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[6 -3 ];end elseif (v99<=47) then v96[v98[2]]=v74[v98[3]];elseif (v99>(104 -56)) then do return;end else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=54) then if (v99<=51) then if (v99>50) then v96[v98[2]][v96[v98[1 + 2 ]]]=v96[v98[4]];else v96[v98[3 -1 ]]=v96[v98[3]]%v96[v98[4]] ;end elseif (v99<=52) then v96[v98[2]]={};elseif (v99==53) then local v254=0;local v255;local v256;local v257;local v258;while true do if (v254==1) then v91=(v257 + v255) -1 ;v258=0;v254=2;end if (v254==0) then v255=v98[2];v256,v257=v89(v96[v255](v21(v96,v255 + 1 ,v98[3])));v254=1;end if (v254==2) then for v377=v255,v91 do v258=v258 + 1 ;v96[v377]=v256[v258];end break;end end else v96[v98[2]]=v73[v98[3]];end elseif (v99<=56) then if (v99==55) then local v188=v98[2];v96[v188]=v96[v188](v21(v96,v188 + 1 ,v98[3 + 0 ]));else local v190=v98[2];do return v21(v96,v190,v91);end end elseif (v99<=57) then local v191=0;local v192;while true do if (v191==0) then v192=v98[2];v96[v192](v21(v96,v192 + (792 -(368 + 423)) ,v91));break;end end elseif (v99>58) then v96[v98[2]]=v96[v98[3]] + v98[4] ;else local v262=v98[2];local v263=v96[v262 + 2 ];local v264=v96[v262] + v263 ;v96[v262]=v264;if (v263>0) then if (v264<=v96[v262 + 1 ]) then v90=v98[3];v96[v262 + 3 ]=v264;end elseif (v264>=v96[v262 + (3 -2) ]) then v90=v98[3];v96[v262 + 3 ]=v264;end end elseif (v99<=69) then if (v99<=(82 -(10 + 8))) then if (v99<=61) then if (v99>60) then for v209=v98[2],v98[3] do v96[v209]=nil;end else local v193=0;local v194;while true do if (0==v193) then v194=v98[2];v96[v194]=v96[v194]();break;end end end elseif (v99<=62) then local v195=v98[7 -5 ];local v196=v96[v195 + 2 ];local v197=v96[v195] + v196 ;v96[v195]=v197;if (v196>0) then if (v197<=v96[v195 + 1 ]) then v90=v98[3];v96[v195 + 3 ]=v197;end elseif (v197>=v96[v195 + 1 ]) then v90=v98[3];v96[v195 + 3 ]=v197;end elseif (v99>63) then local v266=0;local v267;local v268;local v269;local v270;while true do if (v266==1) then v91=(v269 + v267) -1 ;v270=0;v266=2;end if (v266==0) then v267=v98[2];v268,v269=v89(v96[v267](v21(v96,v267 + 1 ,v98[3])));v266=1;end if (v266==2) then for v384=v267,v91 do local v385=0;while true do if (v385==0) then v270=v270 + 1 ;v96[v384]=v268[v270];break;end end end break;end end else v96[v98[444 -(416 + 26) ]][v96[v98[3]]]=v98[4];end elseif (v99<=66) then if (v99==65) then local v199=v98[2];v96[v199]=v96[v199](v21(v96,v199 + 1 ,v98[9 -6 ]));else v96[v98[2]]();end elseif (v99<=67) then for v211=v98[1 + 1 ],v98[3] do v96[v211]=nil;end elseif (v99==68) then if (v96[v98[2]]==v98[6 -2 ]) then v90=v90 + 1 ;else v90=v98[3];end else local v273=0;local v274;while true do if (v273==0) then v274=v98[2];do return v96[v274](v21(v96,v274 + 1 ,v98[441 -(145 + 293) ]));end break;end end end elseif (v99<=74) then if (v99<=71) then if (v99==70) then local v201=0;local v202;local v203;while true do if (v201==0) then v202=v98[432 -(44 + 386) ];v203=v96[v98[3]];v201=1;end if (1==v201) then v96[v202 + (1487 -(998 + 488)) ]=v203;v96[v202]=v203[v98[4]];break;end end else local v204=v98[2];do return v96[v204](v21(v96,v204 + 1 ,v98[3]));end end elseif (v99<=72) then if (v96[v98[2]]==v98[2 + 2 ]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==73) then local v276=v87[v98[3]];local v277;local v278={};v277=v18({},{[v7("\35\118\30\118\131\241\4","\148\124\41\119\24\231")]=function(v325,v326) local v327=0;local v328;while true do if (0==v327) then v328=v278[v326];return v328[1][v328[2]];end end end,[v7("\46\189\35\160\192\24\140\41\160\207","\183\113\226\77\197")]=function(v329,v330,v331) local v332=v278[v330];v332[1][v332[2]]=v331;end});for v334=1,v98[4] do local v335=0;local v336;while true do if (1==v335) then if (v336[1]==1) then v278[v334-1 ]={v96,v336[3]};else v278[v334-1 ]={v73,v336[3]};end v95[ #v95 + 1 + 0 ]=v278;break;end if (v335==0) then v90=v90 + 1 ;v336=v86[v90];v335=1;end end end v96[v98[2]]=v40(v276,v277,v74);else v96[v98[2]][v96[v98[3]]]=v96[v98[4]];end elseif (v99<=77) then if (v99<=75) then v96[v98[2]]=v73[v98[3]];elseif (v99>76) then local v282=0;local v283;local v284;local v285;while true do if (v282==0) then v283=v98[2];v284=v96[v283];v282=1;end if (v282==1) then v285=v96[v283 + 2 ];if (v285>0) then if (v284>v96[v283 + 1 ]) then v90=v98[3];else v96[v283 + 3 ]=v284;end elseif (v284<v96[v283 + 1 ]) then v90=v98[3];else v96[v283 + 3 ]=v284;end break;end end else local v286=0;local v287;local v288;local v289;local v290;while true do if (v286==1) then v91=(v289 + v287) -1 ;v290=0;v286=2;end if (v286==2) then for v389=v287,v91 do v290=v290 + 1 ;v96[v389]=v288[v290];end break;end if (v286==0) then v287=v98[2];v288,v289=v89(v96[v287](v96[v287 + 1 ]));v286=1;end end end elseif (v99<=78) then local v207=v98[2];v96[v207](v21(v96,v207 + 1 ,v98[3]));elseif (v99>(851 -(201 + 571))) then local v291=v98[2];local v292=v96[v291];local v293=v98[1141 -(116 + 1022) ];for v337=1,v293 do v292[v337]=v96[v291 + v337 ];end else local v294=0;local v295;while true do if (v294==0) then v295=v98[2];v96[v295]=v96[v295]();break;end end end v90=v90 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--
